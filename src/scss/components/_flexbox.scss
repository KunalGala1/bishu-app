@use '../abstracts/' as a;
@use '../layout' as l;
@use '../theme/' as t;

$flex-directions: (
  'row': row,
  'row-reverse': row-reverse,
  'column': column,
  'column-reverse': column-reverse,
);

$flex-wraps: (
  'wrap': wrap,
  'wrap-reverse': wrap-reverse,
  'nowrap': nowrap,
);

$justify-contents: (
  'justify-start': flex-start,
  'justify-end': flex-end,
  'justify-between': space-between,
  'justify-around': space-around,
  'justify-evenly': space-evenly,
);

$align-items: (
  'align-start': flex-start,
  'align-end': flex-end,
  'align-stretch': stretch,
  'align-baseline': baseline,
);

.flex {
  display: flex;
  justify-content: center;
  align-items: center;

  /* Direction */
  @each $label, $direction in $flex-directions {
    &.#{$label} {
      flex-direction: $direction;
    }
  }

  /* Wrap */
  @each $label, $wrap in $flex-wraps {
    &.#{$label} {
      flex-wrap: $wrap;
    }
  }

  /* Justify Content */
  @each $label, $justify in $justify-contents {
    &.#{$label} {
      justify-content: $justify;
    }
  }

  /* Align Items */
  @each $label, $align in $align-items {
    &.#{$label} {
      align-items: $align;
    }
  }
}

/* Gap Sizes */
$gap-sizes: (
  'xxs': 6px,
  'xs': 12px,
  'sm': 18px,
  'md': 30px,
  'lg': 42px,
  'xl': 60px,
  'xxl': 72px,
);

/* Gap */
@each $label, $size in $gap-sizes {
  .flex.gap-#{$label} {
    gap: $size;
  }
}

.flex-md-column {
  @include l.max(md) {
    flex-direction: column;
  }
}

.flex-1 {
  flex: 1;
}
